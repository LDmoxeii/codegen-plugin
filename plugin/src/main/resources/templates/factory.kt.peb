package {{ basePackage }}{{ templatePackage }}{{ package }}.{{ DEFAULT_FAC_PACKAGE }}

import {{ fullEntityType }}
import com.only4.cap4k.ddd.core.domain.aggregate.AggregateFactory
import com.only4.cap4k.ddd.core.domain.aggregate.AggregatePayload
import com.only4.cap4k.ddd.core.domain.aggregate.annotation.Aggregate
import org.springframework.stereotype.Service

/**
 * {{ Comment }}
 *
 * 本文件由[cap4k-ddd-codegen-gradle-plugin]生成
 * @author cap4k-ddd-codegen
 * @date {{ date }}
 */
@Service
@Aggregate(
    aggregate = "{{ Aggregate }}",
    name = "{{ Factory }}",
    type = Aggregate.TYPE_FACTORY,
    description = ""
)
class {{ Factory }} : AggregateFactory<{{ Factory }}.Payload, {{ Entity }}> {

    override fun create(payload: Payload): {{ Entity }} {
        return {{ Entity }}(

        )
    }

     @Aggregate(
        aggregate = "{{ Entity }}",
        name = "{{ Payload }}",
        type = Aggregate.TYPE_FACTORY_PAYLOAD,
        description = ""
    )
    data class Payload(
        val name: String
    ) : AggregatePayload<{{ Entity }}>

}
